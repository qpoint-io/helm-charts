apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qpoint.fullname" . }}
  labels:
    {{- include "qpoint.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "qpoint.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qpoint.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qpoint.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          env:
            - name: STATUS_LISTEN
              value: "{{ .Values.status.addr }}:{{ .Values.status.port }}"
            - name: DEFAULT_TCP_LISTEN_ADDRESS
              value: "{{ .Values.defaultTCPListenAddress }}"
            - name: CONNECT_TCP_FORWARD_PORTS
              value: "{{ .Values.connectTCPForwardPorts }}"
            - name: CONNECT_UPSTREAM
              value: "{{ .Values.connectUpstream }}"
            - name: CONNECT_USERNAME
              value: "{{ .Values.connectUsername }}"
            - name: CONNECT_PASSWORD
              value: "{{ .Values.connectPassword }}"
            - name: ACCESS_LOG
              value: "{{ .Values.accessLog }}"
            - name: LOG_LEVEL
              value: "{{ .Values.logLevel }}"
            - name: LOG_ENCODING
              value: "{{ .Values.logEncoding }}"
            - name: ENVOY_LOG_LEVEL
              value: "{{ .Values.envoyLogLevel }}"
            - name: DNS_LOOKUP_FAMILY
              value: "{{ .Values.dnsLookupFamily }}"
          ports:
        {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
        {{- end }}
            - name: status
              containerPort: {{ .Values.status.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /readyz
              port: status
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: status
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /healthz
              port: status
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
